"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[713],{7349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>V,contentTitle:()=>A,default:()=>S,frontMatter:()=>I,metadata:()=>T,toc:()=>M});var r=n(4848),i=n(8453),a=n(6540),s=n(4164),o=n(3104),c=n(6347),l=n(205),u=n(7485),d=n(1682),h=n(9466);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return p(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}(n);return function(e){const t=(0,d.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function b(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,c.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=m(e),[s,o]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[c,u]=f({queryString:n,groupId:r}),[d,p]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,h.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),g=(()=>{const e=c??d;return b({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!b({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),p(e)}),[u,p,i]),tabValues:i}}var x=n(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j(e){let{className:t,block:n,selectedValue:i,selectValue:a,tabValues:c}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),r=c[n].value;r!==i&&(u(t),a(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:c.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>l.push(e),onKeyDown:h,onClick:d,...a,className:(0,s.A)("tabs__item",y.tabItem,a?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:i}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function w(e){const t=g(e);return(0,r.jsxs)("div",{className:(0,s.A)("tabs-container",y.tabList),children:[(0,r.jsx)(j,{...e,...t}),(0,r.jsx)(v,{...e,...t})]})}function k(e){const t=(0,x.A)();return(0,r.jsx)(w,{...e,children:p(e.children)},String(t))}const C={tabItem:"tabItem_Ymn6"};function _(e){let{children:t,hidden:n,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(C.tabItem,i),hidden:n,children:t})}const I={sidebar_position:1,sidebar_label:"Cutting Board (Combining)"},A="Cutting Board (Combining)",T={id:"crafttweaker/recipes/cutting_board_combining",title:"Cutting Board (Combining)",description:"Combining is new system introduced in MrCrayfish's Furniture Mod: Refurbished. It allows the player to stack items on a Cutting Board to craft a new item. The best way to think about this recipe is creating a sandwich, you start by placing a slice of bread, then layer your ingredients, and then finalise it by placing another slice of bread on the top.",source:"@site/docs/crafttweaker/recipes/cutting_board_combining.mdx",sourceDirName:"crafttweaker/recipes",slug:"/crafttweaker/recipes/cutting_board_combining",permalink:"/MrCrayfishFurnitureMod-Refurbished/docs/crafttweaker/recipes/cutting_board_combining",draft:!1,unlisted:!1,editUrl:"https://github.com/MrCrayfish/MrCrayfishFurnitureMod-Refurbished/tree/documentation/docs/crafttweaker/recipes/cutting_board_combining.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Cutting Board (Combining)"},sidebar:"crafttweakerSidebar",previous:{title:"Recipe Types",permalink:"/MrCrayfishFurnitureMod-Refurbished/docs/category/recipe-types"}},V={},M=[{value:"Recipe Manager",id:"recipe-manager",level:2},{value:"Functions",id:"functions",level:2},{value:"<code>addRecipe(name, output, input)</code>",id:"addrecipename-output-input",level:3}];function R(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"cutting-board-combining",children:"Cutting Board (Combining)"}),"\n",(0,r.jsx)(t.p,{children:"Combining is new system introduced in MrCrayfish's Furniture Mod: Refurbished. It allows the player to stack items on a Cutting Board to craft a new item. The best way to think about this recipe is creating a sandwich, you start by placing a slice of bread, then layer your ingredients, and then finalise it by placing another slice of bread on the top."}),"\n",(0,r.jsx)(t.h2,{id:"recipe-manager",children:"Recipe Manager"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"<recipetype:refurbished_furniture:cutting_board_combining>"})}),"\n",(0,r.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(t.h3,{id:"addrecipename-output-input",children:(0,r.jsx)(t.code,{children:"addRecipe(name, output, input)"})}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Paramater"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Required"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"name"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"The name of the recipe, must be unique."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"output"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://docs.blamejared.com/1.20.4/en/vanilla/api/item/IItemStack",children:"IItemStack"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:["The item from the result of combinining the ",(0,r.jsx)(t.code,{children:"input"}),", can have an amount and tag"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"input"}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.a,{href:"https://docs.blamejared.com/1.20.4/en/vanilla/api/ingredient/IIngredient",children:"IIngredient[]"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:["An array of ingredients, where the first is the first item to be placed, the last being the final item to craft the ",(0,r.jsx)(t.code,{children:"output"}),". Must have at least 1 ingredient, with a maximum of 5 ingredients."]})]})]})]}),"\n",(0,r.jsxs)(t.admonition,{type:"warning",children:[(0,r.jsxs)(t.p,{children:["If the ",(0,r.jsx)(t.code,{children:"input"})," of another combining recipe is the same or partially (e.g. the first two ingredients), the recipe registered first or the recipe with the lesser number of inputs will be crafted, making the other recipe impossible to craft."]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Check the Craftweaker logs for conflcition warnings"})})]}),"\n",(0,r.jsxs)(k,{children:[(0,r.jsx)(_,{value:"zenscript",label:"ZenScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="%gamedir%/scripts/example.zs"',children:'<recipetype:refurbished_furniture:cutting_board_combining>.addRecipe(\n    "easy_diamonds",\n    <item:minecraft:diamond> * 64, \n    [<item:minecraft:apple>, <item:minecraft:carrot>, <item:minecraft:potato>]\n);\n'})})}),(0,r.jsx)(_,{value:"json",label:"Datapack Equivelant",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:'title="(ZIP File) \ud83e\udc62 /data/[namespace]/recipes/combining/easy_diamonds.json"',children:'{\n    "type": "refurbished_furniture:cutting_board_combining",\n    "input": [\n        {\n            "item": "minecraft:apple"\n        },\n        {\n            "item": "minecraft:carrot"\n        },\n        {\n            "item": "minecraft:potato"\n        }\n    ],\n    "result": {\n        "item": "minecraft:diamond",\n        "count": 64\n    }\n}    \n'})})})]})]})}function S(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(R,{...e})}):R(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(6540);const i={},a=r.createContext(i);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);